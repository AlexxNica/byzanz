2006-01-10  Benjamin Otte  <otte@gnome.org>

	* src/byzanzrecorder.c: (byzanz_recorder_queue_image),
	(byzanz_recorder_filter_damage_event), (byzanz_recorder_new_fd),
	(byzanz_recorder_destroy):
	  subtract damaged regions the moment we get the event that they're
	  damaged. Might increase traffic but otherwise we'd lose areas we'd
	  need to refetch

2006-01-10  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* gifenc/gifenc.h:
	* gifenc/quantize.c: (gifenc_palette_get_num_colors):
	  add function to get number of colors
	* gifenc/gifenc.c: (gifenc_write_lsd), (gifenc_write_color_table),
	(gifenc_write_image_description), (gifenc_write_image_data):
	  use gifenc_palette_get_num_colors instead of (often wrongly)
	  calculating the number of colors itself

2006-01-10  Benjamin Otte  <otte@gnome.org>

	* src/byzanzrecorder.c: (recorder_job_new):
	  That should have been g_async_queue_push_unlocked from the start.
	  Wonder why that didn't matter on PPC.

2006-01-10  Benjamin Otte  <otte@gnome.org>

	* gifenc/quantize.c: (gifenc_octree_write):
	  fix writeout on little endian.
	* src/byzanzselect.c: (expose_cb), (button_pressed_cb),
	(byzanz_select_area):
	  remove leftover g_print stuff and really work without Composite

2006-01-10  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* macros/Makefile.am:
	  this file survived quite a while without being added to CVS

2006-01-10  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* src/byzanzrecorder.c: (recorder_job_new):
	  push the NEED_FILE_CACHE event to the front, so the encoding thread
	  starts putting stuff into the file NOW
	* src/byzanzselect.c: (expose_cb), (realize_cb),
	(byzanz_select_area):
	  add experimental code for non-composite X

2006-01-10  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* configure.ac:
	* po/es.po:
	  add Spanish translation by Antonio Ognio

2006-01-10  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* configure.ac:
	  version 0.0.1.1
	* src/Makefile.am:
	  rename the binary from "record" to "byzanz-record"
	* src/byzanzapplet.c: (byzanz_applet_stop_recording):
	  set default button
	* src/byzanzrecorder.c: (recorder_job_new),
	(byzanz_recorder_dither_region), (byzanz_recorder_add_image),
	(stored_image_remove_file), (stored_image_store),
	(stored_image_dither_get_data), (stored_image_process),
	(byzanz_recorder_quantize), (byzanz_recorder_encode_get_data),
	(byzanz_recorder_encode), (byzanz_recorder_run_encoder),
	(byzanz_recorder_new_fd):
	  implement a file cache that gets triggered when too much data has
	  built up. This is done completely inside the encoding thread.
	  Byzanz can almost realtime-encode small movie windows now.
	* src/byzanzselect.c: (expose_cb), (button_pressed_cb),
	(button_released_cb), (motion_notify_cb):
	  random fixes so you can really select the whole screen and
	  the selected area is drawn correctly

==================== 0.0.1 ====================

2006-01-08  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* configure.ac:
	  release version 0.0.1

2006-01-08  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* configure.ac:
	* po/POTFILES.in:
	  Fixes so translation works now. make distcheck passes.
	* po/de.po:
	  update

2006-01-08  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* src/byzanzapplet.c: (byzanz_applet_start_recording),
	(byzanz_applet_stop_recording):
	  record to temp file and then allow the user to save it to where
	  he wants

2006-01-08  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* src/Makefile.am:
	  include gifenc dir, the i18n.h file is there
	* gifenc/gifenc.c: (gifenc_open), (gifenc_open_fd):
	* gifenc/gifenc.h:
	  change gifenc_open function argument order, add gifenc_open_fd
	* src/byzanzapplet.c: (byzanz_applet_start_recording):
	* src/byzanzrecorder.c: (byzanz_recorder_new),
	(byzanz_recorder_new_fd):
	* src/byzanzrecorder.h:
	* src/record.c: (main):
	  make byzanz_recorder_new take a GdkRectangle as area, add
	  byzanz_recorder_new_fd

2006-01-08  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* configure.ac:
	  correctly check for XDamage
	* src/byzanzrecorder.c: (byzanz_recorder_new):
	* src/byzanzrecorder.h:
	* src/record.c: (main):
	  adapt byzanz_recorder_new so it takes a GdkWindow to record
	* src/Makefile.am:
	* src/byzanzselect.c:
	* src/byzanzselect.h:
	  add code for doing selections of desktop areas
	* src/byzanzapplet.c: (byzanz_applet_start_recording),
	(byzanz_applet_fill):
	  use new selection mechanism

2006-01-06  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* src/byzanzrecorder.c: (byzanz_recorder_filter_damage_event):
	  only start image encoding routine if there is something to encode

2006-01-06  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* src/Makefile.am:
	* src/panelstuffer.c:
	* src/panelstuffer.h:
	  added PanelStuffer from battstat applet patch. Added function to
	  automaticaclly track orientation changes if parent is an applet.
	* src/byzanzapplet.c: (byzanz_applet_update),
	(byzanz_applet_is_recording), (byzanz_applet_start_recording),
	(byzanz_applet_stop_recording), (button_clicked_cb),
	(destroy_applet), (byzanz_applet_fill):
	  add a funky label counting the elapsed time
	* src/byzanzrecorder.c: (byzanz_recorder_idle_cb),
	(byzanz_recorder_filter_damage_event):
	  use a different callback in idle and timeout functions

2006-01-06  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* src/byzanzapplet.c: (button_clicked_cb), (byzanz_applet_fill):
	  use a togglebutton to record (it's still a very simple applet ;))
	* src/byzanzrecorder.c: (compute_image_size), (recorder_job_free),
	(recorder_job_new), (byzanz_recorder_run_encoder),
	(byzanz_recorder_destroy), (byzanz_recorder_queue_image), 
	(byzanz_recorder_set_max_cache), (byzanz_recorder_get_max_cache),
	(byzanz_recorder_get_cache):
	* src/byzanzrecorder.h:
	  monitor memory usage of cache to avoid eating all memory
	* src/byzanzrecorder.c: (byzanz_recorder_start),
	(byzanz_recorder_new):
	  create the Damage object when starting - that way we can do all
	  drawing based on Damage events and avoid drawing the whole screen
	  twice at the start.

2006-01-06  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* Makefile.am:
	* autogen.sh:
	* configure.ac:
	* macros/ac-define-dir.m4:
	* macros/as-ac-expand.m4:
	* macros/as-compiler-flag.m4:
	* macros/as-scrub-include.m4:
	* macros/as-version.m4:
	* po/LINGUAS:
	* po/POTFILES.in:
	* po/de.po:
	* src/Makefile.am:
	  update this whole mess to use gnome-autogen instead of the GStreamer
	  common/ thingy.
	* src/ByzanzApplet.server.in.in:
	* src/byzanzapplet.c: (button_clicked_cb), (destroy_applet),
	(byzanz_applet_fill):
	  add a first approach at a recording applet

2006-01-06  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* src/byzanzrecorder.c: (byzanz_recorder_filter_damage_event):
	  do not immediately process a long-awaited damage event, but try to
	  process multiple Damage events by registering an idle function

2006-01-05  Benjamin Otte  <in7y118@public.uni-hamburg.de>

	* configure.ac:
	  check for gthread-2.0 for the app
	* gifenc/gifenc.c: (gifenc_close):
	* gifenc/gifenc.h:
	  make gifenc_close return a boolean to indicate successful creation
	  of a file. (Currently always returns TRUE)
	* gifenc/quantize.c: (gifenc_quantize_image):
	  comment out last print statement
	* po/de.po:
	  update
	* src/Makefile.am:
	* src/byzanzrecorder.c: 
	* src/byzanzrecorder.h:
	  add these 2 files and split out the recording functionality in them.
	* src/record.c: (verbose_print), (usage), (stop_recording),
	(start_recording), (prepare_recording), (main):
	  use ByzanzRecorder and a main loop.

2006-01-05  Benjamin Otte  <otte@gnome.org>

	initial import
